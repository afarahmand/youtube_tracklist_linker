# Todo

- force track and sample fields to be CSV (escape '(),[]')
- constructTrack support for multi-track
- render on DOMContentLoaded?
- remove old table when rendering new one
- support nil\undefined sample col
- build BE(API?)

- add CSS classes to YouTube auto style
- add CSS
- edit button creates pre-filled form
  - approval system on the BE
  - different levels of permissions and evaluation
  - user logins
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


# Display

|     #     |       Start        |      Track        |                Sample                |
| --------- | ------------------ | ----------------- | ------------------------------------ |
| [1](url)  | [(H)HH:MM:SS](url) | [Track Name](url) | [Track Name](url), [Track Name](url) |
| [2](url)  |                    |                   |                                      |


# Tracklists

| col-name        | data type  |              details                  |
| --------------- | ---------- | ------------------------------------- |
| id              | integer    | not null, primary key                 |
| videoId         | string     | not null                              |
| title           | string     | not null                              |
| status          | string     | not null, [pending, active, rejected] |
| tracklist       | jsonb      | not null                              |
| creator         | string\int | not null                              |
| evaluator       | string\int | not null                              |
| created_at      | datetime   | not null                              |
| updated_at      | datetime   | not null                              |
| evaluated_at    | datetime   | not null                              |

index videoId, creator, evaluator
uniqueness [videoId, status: active]

tracklist: {
  1: {
    trackNumber: 1,
    start: "0:00",
    track: "[Fibre - Supernatural](https://www.youtube.com/watch?v=JHqeZi5W05A)",
    sample: "[The Limit - Miracles](https://www.youtube.com/watch?v=Ghvyy4mCmRQ), ..."
  },
  2:...
}


+ + + + + + + + +
Future Features:
+ + + + + + + + +
- automatically, periodically backup DB
- support for user accounts
- support for users editing and saving tracklists
  - limit count of unapproved tracklists (further limit count of unapproved tracklists)
  - internal tool that compares multiple unapproved tracklists with same url during approval process
- support for users approving tracklists
- support for both singular tracks and mixes
- scan for existing tracklist within the comments section using a worker\miner
